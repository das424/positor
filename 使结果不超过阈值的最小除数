/*给你一个整数数组 nums 和一个正整数 threshold  ，你需要选择一个正整数作为除数，然后将数组里每个数都除以它，并对除法结果求和。
请你找出能够使上述结果小于等于阈值 threshold 的除数中 最小 的那个。
每个数除以除数后都向上取整，比方说 7/3 = 3 ， 10/2 = 5 。
题目保证一定有解。
示例 1：
输入：nums = [1,2,5,9], threshold = 6
输出：5
解释：如果除数为 1 ，我们可以得到和为 17 （1+2+5+9）。
如果除数为 4 ，我们可以得到和为 7 (1+1+2+3) 。如果除数为 5 ，和为 5 (1+1+1+2)。
示例 2：
输入：nums = [2,3,5,7,11], threshold = 11
输出：3
*/
int smallestDivisor(int* nums, int numsSize, int threshold){
    int left = 1;
    int right = nums[numsSize - 1];
    int cnt = 0;
    while (left < right) {
        int mid = left + (right - left) / 2;
        cnt = 0;
        for (int i = 0; i < numsSize; i++) {
            cnt += ((nums[i] + mid - 1) / mid);
        }
        if (cnt <= threshold) {
            right = mid;
        } else {
            left = mid + 1;
        }
    }

    return left;
}
