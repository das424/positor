/*假设你有一个很长的花坛，一部分地块种植了花，另一部分却没有。可是，花卉不能种植在相邻的地块上，它们会争夺水源，两者都会死去。
给定一个花坛（表示为一个数组包含0和1，其中0表示没种植花，1表示种植了花），和一个数 n 。能否在不打破种植规则的情况下种入 n 朵花？能则返回True，不能则返回False。
示例 1:
输入: flowerbed = [1,0,0,0,1], n = 1
输出: True
示例 2:
输入: flowerbed = [1,0,0,0,1], n = 2
输出: False
*/
bool canPlaceFlowers(int* flowerbed, int flowerbedSize, int n){
    if(flowerbedSize==0) return false;
    int count=0;
    if(flowerbedSize==1){//单元素数组
        if(flowerbed[0]==0) count++;
    }else if(flowerbedSize==2){//只有两元素
        if(flowerbed[0]==0&&flowerbed[1]==0) count++;
    }else{
        for(int i=0;i<flowerbedSize;i++){
            if(i==0){//第一个元素
                if(flowerbed[i]==0&&flowerbed[i+1]==0){
                    count++;
                    flowerbed[i]=1;//符合条件则种花，标记为1
                } 
            }else if(i==flowerbedSize-1){//最后一个元素
                if(flowerbed[i]==0&&flowerbed[i-1]==0){
                    count++;
                    flowerbed[i]=1;
                } 
            }else{
                if(flowerbed[i]==0){
                    if(flowerbed[i-1]==0&&flowerbed[i+1]==0){
                        count++;
                        flowerbed[i]=1;
                    }
                }
            }
        }
    }
    
    return count<n?false:true;
}
