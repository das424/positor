/*给定一个单链表，把所有的奇数节点和偶数节点分别排在一起。请注意，这里的奇数节点和偶数节点指的是节点编号的奇偶性，而不是节点的值的奇偶性。
请尝试使用原地算法完成。你的算法的空间复杂度应为 O(1)，时间复杂度应为 O(nodes)，nodes 为节点总数。
示例 1:
输入: 1->2->3->4->5->NULL
输出: 1->3->5->2->4->NULL
示例 2:
输入: 2->1->3->5->6->4->7->NULL 
输出: 2->3->6->7->1->5->4->NULL
*/
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */


struct ListNode* oddEvenList(struct ListNode* head){
if(!head||head->next==NULL||head->next->next==NULL) return head;
else
{
    struct ListNode *p=head,*q=head->next,*m,*n,*x,*y,*s;
    s=q;
    m=p->next->next;
    n=q->next->next;
    while(m&&n)
    {
        if(m->next!=NULL) x=m->next->next;
        if(n->next!=NULL) y=n->next->next;
        p->next=m;
        q->next=n;
        p=m;
        q=n;
        m=x;
        n=y;
    }
    if(m==NULL)          //偶数个
    {
        p->next=s;
    }
    else   //奇数个
    {
        p->next=m;
        m->next=s;
        q->next=NULL;
    }
    return head;
    
}
}
