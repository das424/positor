/*给你一个以 (radius, x_center, y_center) 表示的圆和一个与坐标轴平行的矩形 (x1, y1, x2, y2)，其中 (x1, y1) 是矩形左下角的坐标，(x2, y2) 是右上角的坐标。

如果圆和矩形有重叠的部分，请你返回 True ，否则返回 False 。

换句话说，请你检测是否 存在 点 (xi, yi) ，它既在圆上也在矩形上（两者都包括点落在边界上的情况）。
示例 1：
输入：radius = 1, x_center = 0, y_center = 0, x1 = 1, y1 = -1, x2 = 3, y2 = 1
输出：true
解释：圆和矩形有公共点 (1,0) 
示例 2：
输入：radius = 1, x_center = 0, y_center = 0, x1 = -1, y1 = 0, x2 = 0, y2 = 1
输出：true
*/
bool checkOverlap(int radius, int x_center, int y_center, int x1, int y1, int x2, int y2){
    if(x_center<x1-radius||x_center>x2+radius){        //处理 左 右边
        return false;
    }
    if(y_center<y1-radius||y_center>y2+radius){        //处理 上 下边
        return false;
    }
    int dx,dy,l;
    if(x_center<=x1&&y_center>=y2){             //处理左上角
        dx=x1-x_center;dy=y_center-y2;
        l=dx*dx+dy*dy;
        if(l>radius*radius){
            return false;
        }
    }
    if(x_center<=x1&&y_center<=y1){             //处理左下角
        dx=x1-x_center;dy=y1-y_center;
        l=dx*dx+dy*dy;
        if(l>radius*radius){
            return false;
        }
    }
    if(x_center>=x2&&y_center>=y2){             //处理右上角
        dx=x_center-x2;dy=y_center-y2;
        l=dx*dx+dy*dy;
        if(l>radius*radius){
            return false;
        }
    }
    if(x_center>=x2&&y_center<=y1){             //处理右下角
        dx=x_center-x2;dy=y1-y_center;
        l=dx*dx+dy*dy;
        if(l>radius*radius){
            return false;
        }
    }
    return true;
}
